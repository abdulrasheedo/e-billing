-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.fc_applet
(
    fc_applet_id bigint NOT NULL,
    applet_ty character varying(10) NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    display_index integer NOT NULL,
    entity character varying(128),
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    icon character varying(96),
    label character varying(96) NOT NULL,
    menu_access character(1) NOT NULL,
    path character varying(96),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_applet_id)
);

CREATE TABLE IF NOT EXISTS public.fc_appletfilter
(
    fc_appletfilter_id bigint NOT NULL,
    app_applet_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    ownership_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    owner character varying(64),
    quick_filter character(1) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_appletfilter_id)
);

CREATE TABLE IF NOT EXISTS public.fc_appletprop
(
    fc_appletprop_id bigint NOT NULL,
    app_applet_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    appletprop_nm character varying(96) NOT NULL,
    appletprop_val character varying(256),
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_appletprop_id)
);

CREATE TABLE IF NOT EXISTS public.fc_applettype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_application
(
    fc_application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    module_id bigint NOT NULL,
    application_label character varying(96) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    developable character(1) NOT NULL,
    display_index integer NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_application_id)
);

CREATE TABLE IF NOT EXISTS public.fc_assignpage
(
    fc_assignpage_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    assign_caption character varying(96) NOT NULL,
    assign_field character varying(64) NOT NULL,
    assign_list character varying(96) NOT NULL,
    assignpage_label character varying(96) NOT NULL,
    base_field character varying(64) NOT NULL,
    commit_policy character varying(64),
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    filter_caption_1 character varying(96),
    filter_caption_2 character varying(96),
    filter_list_1 character varying(96),
    filter_list_2 character varying(96),
    unassign_caption character varying(96) NOT NULL,
    unassign_list character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_assignpage_id)
);

CREATE TABLE IF NOT EXISTS public.fc_branch
(
    fc_branch_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    zone_id bigint NOT NULL,
    branch_cd character varying(16) NOT NULL,
    branch_desc character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    head_office_fg character(1) NOT NULL,
    sort_cd character varying(32),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_branch_id)
);

CREATE TABLE IF NOT EXISTS public.fc_channeldirectiontype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_channelprop
(
    fc_channelprop_id bigint NOT NULL,
    notification_channel_id bigint NOT NULL,
    channelprop_nm character varying(128) NOT NULL,
    channelprop_val character varying(256),
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_channelprop_id)
);

CREATE TABLE IF NOT EXISTS public.fc_chart
(
    fc_chart_id bigint NOT NULL,
    application_id bigint NOT NULL,
    chart_ty character varying(10) NOT NULL,
    config_type character varying(10) NOT NULL,
    palette_ty character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    height integer NOT NULL,
    provider character varying(64) NOT NULL,
    rule character varying(64),
    show_data_labels character(1) NOT NULL,
    show_grid character(1) NOT NULL,
    smooth character(1) NOT NULL,
    stacked character(1) NOT NULL,
    sub_title character varying(96),
    title character varying(96),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    width integer NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_chart_id)
);

CREATE TABLE IF NOT EXISTS public.fc_chartcatdatatype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_chartpalettetype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_chartserdatatype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_chartsnapshot
(
    fc_chartsnapshot_id bigint NOT NULL,
    category_data_type character varying(10) NOT NULL,
    categories character varying(512) NOT NULL,
    chartsnapshot_desc character varying(96) NOT NULL,
    chartsnapshot_nm character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_chartsnapshot_id)
);

CREATE TABLE IF NOT EXISTS public.fc_chartsnapshotseries
(
    fc_chartsnapshotseries_id bigint NOT NULL,
    chart_snapshot_id bigint NOT NULL,
    series_data_type character varying(10) NOT NULL,
    chartsnapshotseries_nm character varying(64) NOT NULL,
    series character varying(2048) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_chartsnapshotseries_id)
);

CREATE TABLE IF NOT EXISTS public.fc_charttype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_collaborationtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_configtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_credential
(
    fc_credential_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    description character varying(128) NOT NULL,
    name character varying(64) NOT NULL,
    password character varying(512),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    user_name character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_credential_id)
);

CREATE TABLE IF NOT EXISTS public.fc_dashboard
(
    fc_dashboard_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    sections integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_dashboard_id)
);

CREATE TABLE IF NOT EXISTS public.fc_dashboardtile
(
    fc_dashboardtile_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    dashboard_id bigint NOT NULL,
    dashboardtile_ty character varying(10) NOT NULL,
    chart_nm character varying(128) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    display_index integer NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    section integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_dashboardtile_id)
);

CREATE TABLE IF NOT EXISTS public.fc_dashboardtiletype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_department
(
    fc_department_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    department_cd character varying(16) NOT NULL,
    department_desc character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_department_id)
);

CREATE TABLE IF NOT EXISTS public.fc_downloadlog
(
    fc_downloadlog_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    remote_address character varying(64) NOT NULL,
    remote_host character varying(96),
    resource_nm character varying(128) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_downloadlog_id)
);

CREATE TABLE IF NOT EXISTS public.fc_endpointconfig
(
    fc_endpointconfig_id bigint NOT NULL,
    endpoint_type character varying(10) NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    endpoint character varying(64) NOT NULL,
    endpointconfig_desc character varying(96) NOT NULL,
    endpointconfig_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_endpointconfig_id)
);

CREATE TABLE IF NOT EXISTS public.fc_entity
(
    fc_entity_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    entity_base_ty character varying(10) NOT NULL,
    auditable_fg character(1) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_class character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    label character varying(96) NOT NULL,
    reportable_fg character(1) NOT NULL,
    table_nm character varying(32) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_entity_id)
);

CREATE TABLE IF NOT EXISTS public.fc_entityattachment
(
    fc_entityattachment_id bigint NOT NULL,
    app_entity_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_entityattachment_id)
);

CREATE TABLE IF NOT EXISTS public.fc_entitybasetype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_entityexpression
(
    fc_entityexpression_id bigint NOT NULL,
    app_entity_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    expression character varying(512) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_entityexpression_id)
);

CREATE TABLE IF NOT EXISTS public.fc_entityfield
(
    fc_entityfield_id bigint NOT NULL,
    app_entity_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    data_type character varying(10) NOT NULL,
    field_type character varying(10) NOT NULL,
    auditable_fg character(1) NOT NULL,
    category character varying(64),
    column_nm character varying(32),
    descriptive_fg character(1) NOT NULL,
    entity_ref character varying(128),
    entityfield_label character varying(96) NOT NULL,
    entityfield_nm character varying(64) NOT NULL,
    field_columns integer,
    field_precision integer,
    field_rows integer,
    field_scale integer,
    input_label character varying(98),
    input_list_key character varying(64),
    input_widget character varying(128),
    lingual_list_key character varying(64),
    lingual_widget character varying(128),
    list_key character varying(64),
    list_prop character varying(64),
    maintainlink_fg character(1) NOT NULL,
    max_len integer,
    min_len integer,
    nullable_fg character(1) NOT NULL,
    reportable_fg character(1) NOT NULL,
    text_case character varying(10),
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_entityfield_id)
);

CREATE TABLE IF NOT EXISTS public.fc_entityfielddatatype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_entityfieldtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_entityindex
(
    fc_entityindex_id bigint NOT NULL,
    app_entity_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    field_list character varying(256) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_entityindex_id)
);

CREATE TABLE IF NOT EXISTS public.fc_entityuniqueconst
(
    fc_entityuniqueconst_id bigint NOT NULL,
    app_entity_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    field_list character varying(256) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_entityuniqueconst_id)
);

CREATE TABLE IF NOT EXISTS public.fc_entityupload
(
    fc_entityupload_id bigint NOT NULL,
    app_entity_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    constraint_action character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_entityupload_id)
);

CREATE TABLE IF NOT EXISTS public.fc_fieldsequence
(
    entity character varying(128) NOT NULL,
    entity_inst_id bigint NOT NULL,
    fc_fieldsequence_id bigint NOT NULL,
    fieldsequence_cat character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    fieldsequence_def character varying(2048) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_fieldsequence_id)
);

CREATE TABLE IF NOT EXISTS public.fc_fileattachment
(
    attachment_cat character varying(64) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_inst_id bigint NOT NULL,
    fc_fileattachment_id bigint NOT NULL,
    attachment_ty character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    file_nm character varying(64),
    name character varying(64) NOT NULL,
    title character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_fileattachment_id)
);

CREATE TABLE IF NOT EXISTS public.fc_fileattachmentdoc
(
    fc_fileattachmentdoc_id bigint NOT NULL,
    file_attachment_id bigint NOT NULL,
    attachment_doc bytea NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_fileattachmentdoc_id)
);

CREATE TABLE IF NOT EXISTS public.fc_filter
(
    entity character varying(128) NOT NULL,
    entity_inst_id bigint NOT NULL,
    fc_filter_id bigint NOT NULL,
    filter_cat character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    filter_def character varying(2048) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_filter_id)
);

CREATE TABLE IF NOT EXISTS public.fc_form
(
    fc_form_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_form_id)
);

CREATE TABLE IF NOT EXISTS public.fc_formaction
(
    fc_formaction_id bigint NOT NULL,
    app_form_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    formaction_ty character varying(10) NOT NULL,
    action_policy character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    formaction_label character varying(96) NOT NULL,
    formaction_symbol character varying(64),
    order_index integer NOT NULL,
    show_on_create character(1) NOT NULL,
    show_on_maintain character(1) NOT NULL,
    style_class character varying(64),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    validate_form character(1) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_formaction_id)
);

CREATE TABLE IF NOT EXISTS public.fc_formannotation
(
    fc_formannotation_id bigint NOT NULL,
    app_form_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    formannotation_ty character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    html character(1) NOT NULL,
    message character varying(512) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_formannotation_id)
);

CREATE TABLE IF NOT EXISTS public.fc_formannotationtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_formcolumnstype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_formelement
(
    fc_formelement_id bigint NOT NULL,
    app_form_id bigint NOT NULL,
    color character varying(10),
    config_type character varying(10) NOT NULL,
    element_ty character varying(10) NOT NULL,
    tab_content_type character varying(10),
    disabled character(1) NOT NULL,
    edit_action character varying(64),
    editable character(1) NOT NULL,
    element_label character varying(128),
    element_nm character varying(64) NOT NULL,
    field_column integer NOT NULL,
    input_widget character varying(128),
    required character(1) NOT NULL,
    save_as character(1) NOT NULL,
    section_columns character varying(10),
    switch_on_change character(1) NOT NULL,
    tab_applet character varying(128),
    tab_reference character varying(128),
    visible character(1) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_formelement_id)
);

CREATE TABLE IF NOT EXISTS public.fc_formelementtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_formfldvalidpolicy
(
    fc_formfldvalidpolicy_id bigint NOT NULL,
    app_form_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    field_name character varying(64) NOT NULL,
    rule character varying(64),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    validation character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_formfldvalidpolicy_id)
);

CREATE TABLE IF NOT EXISTS public.fc_formrellist
(
    fc_formrellist_id bigint NOT NULL,
    app_form_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    applet_nm character varying(128) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    edit_action character varying(64),
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    label character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_formrellist_id)
);

CREATE TABLE IF NOT EXISTS public.fc_formsetstate
(
    fc_formsetstate_id bigint NOT NULL,
    app_form_state_policy_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    element_ty character varying(10) NOT NULL,
    disabled character varying(10) NOT NULL,
    editable character varying(10) NOT NULL,
    required character varying(10) NOT NULL,
    target character varying(32) NOT NULL,
    visible character varying(10) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_formsetstate_id)
);

CREATE TABLE IF NOT EXISTS public.fc_formstatepolicy
(
    fc_formstatepolicy_id bigint NOT NULL,
    app_form_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    policy_trigger character varying(256),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_formstatepolicy_id)
);

CREATE TABLE IF NOT EXISTS public.fc_formvalidpolicy
(
    fc_formvalidpolicy_id bigint NOT NULL,
    app_form_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    message character varying(512) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_formvalidpolicy_id)
);

CREATE TABLE IF NOT EXISTS public.fc_inboxmessage
(
    fc_inboxmessage_id bigint NOT NULL,
    notification_inbox_id bigint NOT NULL,
    message text NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_inboxmessage_id)
);

CREATE TABLE IF NOT EXISTS public.fc_inputtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_licensestatus
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_lingualdatetype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_module
(
    fc_module_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    module_desc character varying(196) NOT NULL,
    module_label character varying(64) NOT NULL,
    module_nm character varying(32) NOT NULL,
    short_cd character varying(16) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_module_id)
);

CREATE TABLE IF NOT EXISTS public.fc_moduleapp
(
    fc_moduleapp_id bigint NOT NULL,
    module_id bigint NOT NULL,
    auto_install character(1) NOT NULL,
    config_file character varying(128) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    long_description character varying(256) NOT NULL,
    name character varying(64) NOT NULL,
    short_description character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_moduleapp_id)
);

CREATE TABLE IF NOT EXISTS public.fc_notifchannel
(
    fc_notifchannel_id bigint NOT NULL,
    notification_type character varying(10) NOT NULL,
    rec_st character varying(10) NOT NULL,
    channel_desc character varying(64) NOT NULL,
    channel_nm character varying(48) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    sender_contact character varying(96) NOT NULL,
    sender_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_notifchannel_id)
);

CREATE TABLE IF NOT EXISTS public.fc_notificationtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_notifinbox
(
    fc_notifinbox_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    action_link character varying(96),
    action_target character varying(96),
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    notif_subject character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    user_login_id character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_notifinbox_id)
);

CREATE TABLE IF NOT EXISTS public.fc_notifinboxstatus
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_notifmessageformat
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_notifoutbox
(
    fc_notifoutbox_id bigint NOT NULL,
    notification_ty character varying(10) NOT NULL,
    rec_st character varying(10) NOT NULL,
    attempts integer NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    expiry_dt timestamp without time zone,
    next_attempt_dt timestamp without time zone NOT NULL,
    notifaction_subject character varying(96) NOT NULL,
    sent_dt timestamp without time zone,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_notifoutbox_id)
);

CREATE TABLE IF NOT EXISTS public.fc_notifoutboxmessage
(
    fc_notifoutboxmessage_id bigint NOT NULL,
    format character varying(10) NOT NULL,
    notification_id bigint NOT NULL,
    message text NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_notifoutboxmessage_id)
);

CREATE TABLE IF NOT EXISTS public.fc_notifoutboxstatus
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_notifrecipient
(
    fc_notifrecipient_id bigint NOT NULL,
    notification_id bigint NOT NULL,
    type character varying(10) NOT NULL,
    recipient_contact character varying(96) NOT NULL,
    recipient_name character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_notifrecipient_id)
);

CREATE TABLE IF NOT EXISTS public.fc_notifrecipienttype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_notiftemplate
(
    fc_notiftemplate_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    message_format character varying(10) NOT NULL,
    notification_type character varying(10) NOT NULL,
    attachment_generator character varying(64),
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    subject character varying(128) NOT NULL,
    template text NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_notiftemplate_id)
);

CREATE TABLE IF NOT EXISTS public.fc_ownershiptype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_paramvalues
(
    entity character varying(128) NOT NULL,
    entity_inst_id bigint NOT NULL,
    fc_paramvalues_id bigint NOT NULL,
    paramvalues_cat character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    paramvalues_def character varying(2048) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_paramvalues_id)
);

CREATE TABLE IF NOT EXISTS public.fc_passwordhist
(
    fc_passwordhist_id bigint NOT NULL,
    user_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    password character varying(512) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_passwordhist_id)
);

CREATE TABLE IF NOT EXISTS public.fc_privilege
(
    fc_privilege_id bigint NOT NULL,
    application_id bigint NOT NULL,
    privilege_category_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    privilege_cd character varying(64) NOT NULL,
    privilege_desc character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_privilege_id)
);

CREATE TABLE IF NOT EXISTS public.fc_privilegecat
(
    fc_privilegecat_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    privilegecat_cd character varying(64) NOT NULL,
    privilegecat_desc character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_privilegecat_id)
);

CREATE TABLE IF NOT EXISTS public.fc_proplist
(
    fc_proplist_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_proplist_id)
);

CREATE TABLE IF NOT EXISTS public.fc_proplistitem
(
    fc_proplistitem_id bigint NOT NULL,
    app_property_set_id bigint NOT NULL,
    default_val character varying(128),
    encrypt character(1) NOT NULL,
    input_widget character varying(128) NOT NULL,
    item_reference character varying(96),
    mask character(1) NOT NULL,
    proplistitem_desc character varying(96) NOT NULL,
    proplistitem_nm character varying(64) NOT NULL,
    required character(1) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_proplistitem_id)
);

CREATE TABLE IF NOT EXISTS public.fc_proprule
(
    fc_proprule_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    choice_field character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    default_list character varying(96),
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    ignore_case character(1) NOT NULL,
    list_field character varying(64) NOT NULL,
    prop_name_field character varying(64) NOT NULL,
    prop_val_field character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_proprule_id)
);

CREATE TABLE IF NOT EXISTS public.fc_proprulechoice
(
    fc_proprulechoice_id bigint NOT NULL,
    app_property_rule_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    choice_nm character varying(64) NOT NULL,
    choice_val character varying(96) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_proprulechoice_id)
);

CREATE TABLE IF NOT EXISTS public.fc_propset
(
    fc_propset_id bigint NOT NULL,
    app_property_list_id bigint NOT NULL,
    propsetlist_label character varying(96) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_propset_id)
);

CREATE TABLE IF NOT EXISTS public.fc_readconfig
(
    fc_readconfig_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    endpoint_reader character varying(64) NOT NULL,
    endpoint_reader_period integer NOT NULL,
    event_processor character varying(64) NOT NULL,
    processor_rule character varying(64),
    readconfig_desc character varying(64) NOT NULL,
    readconfig_nm character varying(32) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_readconfig_id)
);

CREATE TABLE IF NOT EXISTS public.fc_readconfigproc
(
    fc_readconfigproc_id bigint NOT NULL,
    read_config_id bigint NOT NULL,
    failure_counter bigint NOT NULL,
    in_process_flag character(1) NOT NULL,
    last_process_time timestamp without time zone NOT NULL,
    success_counter bigint NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_readconfigproc_id)
);

CREATE TABLE IF NOT EXISTS public.fc_readevent
(
    fc_readevent_id bigint NOT NULL,
    read_config_proc_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    node character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_readevent_id)
);

CREATE TABLE IF NOT EXISTS public.fc_readeventmsg
(
    fc_readeventmsg_id bigint NOT NULL,
    read_event_id bigint NOT NULL,
    file_name character varying(64),
    message bytea NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_readeventmsg_id)
);

CREATE TABLE IF NOT EXISTS public.fc_recordactiontype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_recordstatus
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_ref
(
    fc_ref_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    search_field character varying(64),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_ref_id)
);

CREATE TABLE IF NOT EXISTS public.fc_reportabledef
(
    fc_reportabledef_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    title character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_reportabledef_id)
);

CREATE TABLE IF NOT EXISTS public.fc_reportablefld
(
    fc_reportablefld_id bigint NOT NULL,
    reportable_id bigint NOT NULL,
    field_desc character varying(96),
    field_nm character varying(32) NOT NULL,
    formatter character varying(128),
    horizontal_align character varying(32),
    parameter_only character(1) NOT NULL,
    type character varying(128),
    width integer,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_reportablefld_id)
);

CREATE TABLE IF NOT EXISTS public.fc_reportcolumn
(
    fc_reportcolumn_id bigint NOT NULL,
    column_order character varying(10),
    horiz_align_type character varying(10),
    report_configuration_id bigint NOT NULL,
    column_desc character varying(48) NOT NULL,
    column_ty character varying(96),
    field_nm character varying(32) NOT NULL,
    formatter character varying(64),
    group_fg character(1) NOT NULL,
    group_on_new_page_fg character(1) NOT NULL,
    sum_fg character(1) NOT NULL,
    width_ratio integer NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_reportcolumn_id)
);

CREATE TABLE IF NOT EXISTS public.fc_reportconfig
(
    fc_reportconfig_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    invert_group_colors character(1) NOT NULL,
    landscape character(1) NOT NULL,
    layout character varying(64),
    processor character varying(64),
    reportable character varying(128) NOT NULL,
    shade_odd_rows character(1) NOT NULL,
    show_grand_footer character(1) NOT NULL,
    template character varying(64),
    title character varying(96) NOT NULL,
    underline_rows character(1) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_reportconfig_id)
);

CREATE TABLE IF NOT EXISTS public.fc_reportparam
(
    fc_reportparam_id bigint NOT NULL,
    report_configuration_id bigint NOT NULL,
    type character varying(10) NOT NULL,
    default_val character varying(64),
    editor character varying(64),
    mandatory_fg character(1) NOT NULL,
    parameter_desc character varying(128) NOT NULL,
    parameter_label character varying(128) NOT NULL,
    parameter_nm character varying(32) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_reportparam_id)
);

CREATE TABLE IF NOT EXISTS public.fc_role
(
    fc_role_id bigint NOT NULL,
    department_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    active_after timestamp without time zone,
    active_before timestamp without time zone,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    dashboard_cd character varying(64),
    email character varying(64),
    role_cd character varying(16) NOT NULL,
    role_desc character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_role_id)
);

CREATE TABLE IF NOT EXISTS public.fc_roleprivilege
(
    fc_roleprivilege_id bigint NOT NULL,
    privilege_id bigint NOT NULL,
    role_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_roleprivilege_id)
);

CREATE TABLE IF NOT EXISTS public.fc_scheduledtask
(
    fc_scheduledtask_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    days character varying(128),
    end_time timestamp without time zone,
    frequency character varying(32),
    last_execution_on timestamp without time zone,
    months character varying(128),
    next_execution_on timestamp without time zone NOT NULL,
    schedtask_desc character varying(64) NOT NULL,
    start_time timestamp without time zone NOT NULL,
    task_nm character varying(32) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    weekdays character varying(128),
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_scheduledtask_id)
);

CREATE TABLE IF NOT EXISTS public.fc_scheduledtaskhist
(
    fc_scheduledtaskhist_id bigint NOT NULL,
    scheduled_task_id bigint NOT NULL,
    task_status character varying(10) NOT NULL,
    error_msg character varying(512),
    finished_on timestamp without time zone,
    started_on timestamp without time zone NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_scheduledtaskhist_id)
);

CREATE TABLE IF NOT EXISTS public.fc_setvalues
(
    entity character varying(128) NOT NULL,
    entity_inst_id bigint NOT NULL,
    fc_setvalues_id bigint NOT NULL,
    setvalues_cat character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    setvalues_def character varying(2048) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_setvalues_id)
);

CREATE TABLE IF NOT EXISTS public.fc_setvaluetype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_sysparameter
(
    fc_sysparameter_id bigint NOT NULL,
    module_id bigint NOT NULL,
    param_ty character varying(10) NOT NULL,
    control character(1) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    default_param_val character varying(512),
    editable character(1) NOT NULL,
    editor character varying(256) NOT NULL,
    param_val character varying(512),
    parameter_cd character varying(32) NOT NULL,
    parameter_desc character varying(196) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_sysparameter_id)
);

CREATE TABLE IF NOT EXISTS public.fc_sysparamtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_tabcontenttype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_table
(
    fc_table_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    header_to_upper_case character(1) NOT NULL,
    items_per_page integer NOT NULL,
    limit_select_to_columns character(1) NOT NULL,
    sort_history integer NOT NULL,
    sortable character(1) NOT NULL,
    table_label character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_table_id)
);

CREATE TABLE IF NOT EXISTS public.fc_tableaction
(
    fc_tableaction_id bigint NOT NULL,
    app_table_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    action_policy character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    order_index integer NOT NULL,
    tableaction_label character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_tableaction_id)
);

CREATE TABLE IF NOT EXISTS public.fc_tablecolumn
(
    fc_tablecolumn_id bigint NOT NULL,
    app_table_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    field character varying(64) NOT NULL,
    label character varying(96),
    link_act character varying(64),
    render_widget character varying(128) NOT NULL,
    sortable character(1) NOT NULL,
    width_ratio integer NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_tablecolumn_id)
);

CREATE TABLE IF NOT EXISTS public.fc_uiactiontype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_user
(
    fc_user_id bigint NOT NULL,
    branch_id bigint,
    rec_st character varying(10) NOT NULL,
    work_type character varying(10) NOT NULL,
    allow_multi_login_fg character(1) NOT NULL,
    change_password_fg character(1) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    email character varying(64) NOT NULL,
    full_name character varying(96) NOT NULL,
    last_login_dt timestamp without time zone,
    login_attempts integer NOT NULL,
    login_id character varying(64) NOT NULL,
    login_locked_fg character(1) NOT NULL,
    mobile_no character varying(24),
    origin_work_rec_id bigint,
    password character varying(512),
    password_expires_fg character(1) NOT NULL,
    password_expiry_dt timestamp without time zone,
    supervisor_fg character(1) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    work_branch_cd character varying(32),
    work_department_cd character varying(32),
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_user_id)
);

CREATE TABLE IF NOT EXISTS public.fc_usergroup
(
    fc_usergroup_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    email character varying(64),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    usergroup_desc character varying(96) NOT NULL,
    usergroup_nm character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_usergroup_id)
);

CREATE TABLE IF NOT EXISTS public.fc_usergroupmember
(
    fc_usergroupmember_id bigint NOT NULL,
    user_group_id bigint NOT NULL,
    user_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_usergroupmember_id)
);

CREATE TABLE IF NOT EXISTS public.fc_usergrouprole
(
    fc_usergrouprole_id bigint NOT NULL,
    role_id bigint NOT NULL,
    user_group_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_usergrouprole_id)
);

CREATE TABLE IF NOT EXISTS public.fc_userrole
(
    fc_userrole_id bigint NOT NULL,
    role_id bigint NOT NULL,
    user_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_userrole_id)
);

CREATE TABLE IF NOT EXISTS public.fc_wfalerttype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_wfchannelstatus
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_wfsteppriority
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_wfsteptype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_widgetcolor
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_widgettype
(
    fc_widgettype_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    data_type character varying(10) NOT NULL,
    input_type character varying(10),
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    editor character varying(256) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    list_option character(1) NOT NULL,
    renderer character varying(256) NOT NULL,
    stretch character(1) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_widgettype_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workchannel
(
    fc_workchannel_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    direction character varying(10) NOT NULL,
    status character varying(10) NOT NULL,
    channel_label character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    destination character varying(128) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    rule character varying(128),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workchannel_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workflow
(
    fc_workflow_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity character varying(128) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    flow_label character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workflow_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workflowfilter
(
    fc_workflowfilter_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    workflow_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workflowfilter_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workitem
(
    fc_workitem_id bigint NOT NULL,
    wf_item_event_id bigint NOT NULL,
    critical_alert_sent character(1) NOT NULL,
    expiration_alert_sent character(1) NOT NULL,
    forwarded_by character varying(64),
    held_by character varying(64),
    work_rec_id bigint NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workitem_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workitemevent
(
    fc_workitemevent_id bigint NOT NULL,
    priority character varying(10) NOT NULL,
    wf_item_hist_id bigint NOT NULL,
    action_dt timestamp without time zone,
    actor character varying(64),
    actor_comment character varying(512),
    critical_dt timestamp without time zone,
    error_cd character varying(32),
    error_msg character varying(512),
    expected_dt timestamp without time zone,
    prev_wf_step_name character varying(64),
    step_dt timestamp without time zone NOT NULL,
    wf_action character varying(32),
    wf_step_name character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workitemevent_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workitemhistory
(
    fc_workitemhistory_id bigint NOT NULL,
    application_nm character varying(64) NOT NULL,
    branch_cd character varying(32),
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    department_cd character varying(32),
    entity_nm character varying(128) NOT NULL,
    initiated_by character varying(96) NOT NULL,
    item_desc character varying(196) NOT NULL,
    origin_work_rec_id bigint,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    workflow_nm character varying(128) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workitemhistory_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workrecordtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.fc_workstep
(
    fc_workstep_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    priority character varying(10) NOT NULL,
    record_action_type character varying(10),
    step_type character varying(10) NOT NULL,
    workflow_id bigint NOT NULL,
    alt_next_step_nm character varying(64),
    audit character(1) NOT NULL,
    binary_condition_nm character varying(64),
    branch_only character(1) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    critical_minutes integer,
    design_x integer NOT NULL,
    design_y integer NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    expiry_minutes integer,
    form_nm character varying(128),
    include_forwarder character(1) NOT NULL,
    next_step_nm character varying(64),
    step_policy character varying(64),
    step_rule character varying(64),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    wfstep_label character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workstep_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workstepalert
(
    fc_workstepalert_id bigint NOT NULL,
    alert_ty character varying(10) NOT NULL,
    notification_type character varying(10) NOT NULL,
    wf_step_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    fire_on_condition_nm character varying(64),
    fire_on_prev_step_nm character varying(64),
    recipient_contact_rule character varying(64),
    recipient_name_rule character varying(64),
    recipient_policy character varying(64),
    template character varying(128) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workstepalert_id)
);

CREATE TABLE IF NOT EXISTS public.fc_worksteprole
(
    fc_worksteprole_id bigint NOT NULL,
    role_id bigint NOT NULL,
    wf_step_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_worksteprole_id)
);

CREATE TABLE IF NOT EXISTS public.fc_worksteprouting
(
    fc_worksteprouting_id bigint NOT NULL,
    wf_step_id bigint NOT NULL,
    condition_nm character varying(64) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    next_step_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_worksteprouting_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workstepsetvalues
(
    fc_workstepsetvalues_id bigint NOT NULL,
    wf_step_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workstepsetvalues_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workstepuseraction
(
    fc_workstepuseraction_id bigint NOT NULL,
    comment_requirement character varying(10) NOT NULL,
    wf_step_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    next_step_nm character varying(64) NOT NULL,
    order_index integer NOT NULL,
    style_class character varying(64),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    useraction_label character varying(96) NOT NULL,
    useraction_symbol character varying(64),
    validate_page character(1) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workstepuseraction_id)
);

CREATE TABLE IF NOT EXISTS public.fc_worktransitionqueue
(
    fc_worktransitionqueue_id bigint NOT NULL,
    processing_dt timestamp without time zone,
    wf_item_id bigint NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_worktransitionqueue_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workwizard
(
    fc_workwizard_id bigint NOT NULL,
    application_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    submit_workflow character varying(128),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    wizard_entity character varying(128) NOT NULL,
    wizard_label character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workwizard_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workwizarditem
(
    fc_workwizarditem_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    owner_id character varying(64) NOT NULL,
    percent_completed integer NOT NULL,
    primary_entity_id bigint NOT NULL,
    title character varying(96) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    wizard character varying(128) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workwizarditem_id)
);

CREATE TABLE IF NOT EXISTS public.fc_workwizardstep
(
    fc_workwizardstep_id bigint NOT NULL,
    config_type character varying(10) NOT NULL,
    wf_wizard_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    entity_desc character varying(96) NOT NULL,
    entity_nm character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    wizardstep_form character varying(128) NOT NULL,
    wizardstep_label character varying(64) NOT NULL,
    wizardstep_reference character varying(64),
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_workwizardstep_id)
);

CREATE TABLE IF NOT EXISTS public.fc_zone
(
    fc_zone_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    language_tag character varying(64),
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    zone_cd character varying(16) NOT NULL,
    zone_desc character varying(64) NOT NULL,
    zone_timezone character varying(64),
    version_no bigint NOT NULL,
    PRIMARY KEY (fc_zone_id)
);

CREATE TABLE IF NOT EXISTS public.rfbinarylogictype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfbooleantype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfcolorscheme
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfconstraintaction
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfdatatype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfdayinweek
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfendpointreadeventstatus
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfendpointtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfeventtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rffielddelimitertype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rffileattachmenttype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rffilterconditiontype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rffrequencyunit
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfgender
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfhaligntype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfimageformat
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfmonthinyear
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfnetworkschemetype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfnetworksecuritytype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfordertype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfpaddirection
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfreportformat
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfrequirementtype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfrestrictiontype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfsqljointype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rfsqltabletype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rftaggedmessagetype
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rftaskstatus
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.rftristate
(
    ref_cd character varying(10) NOT NULL,
    ref_desc character varying(48) NOT NULL,
    PRIMARY KEY (ref_cd)
);

CREATE TABLE IF NOT EXISTS public.u_app_capsule
(
    u_app_capsule_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    price numeric(9, 2) NOT NULL,
    quantity integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_capsule_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_diagnosis
(
    u_app_diagnosis_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_diagnosis_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_dose
(
    u_app_dose_id bigint NOT NULL,
    abbreviation character varying(3) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    meaning character varying(512) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_dose_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_duration
(
    u_app_duration_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(32) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_duration_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_in_patient
(
    u_app_in_patient_id bigint NOT NULL,
    gender character varying(10) NOT NULL,
    age integer NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    first_name character varying(32) NOT NULL,
    last_name character varying(32) NOT NULL,
    patient_no character varying(10) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    weight integer NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_in_patient_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_in_patient_bed_space
(
    u_app_in_patient_bed_space_id bigint NOT NULL,
    patient_id bigint NOT NULL,
    ward_id bigint NOT NULL,
    bed_no character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    no_of_days integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_in_patient_bed_space_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_in_patient_diagnosis
(
    u_app_in_patient_diagnosis_id bigint NOT NULL,
    diagnosis_id bigint NOT NULL,
    patient_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_in_patient_diagnosis_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_in_patient_prescription
(
    u_app_in_patient_prescription_id bigint NOT NULL,
    capsule_id bigint,
    dose_id bigint NOT NULL,
    duration_id bigint NOT NULL,
    inhalation_id bigint,
    injection_id bigint,
    is_capsule character varying(10),
    is_inhalation character varying(10),
    is_injection character varying(10),
    is_syrup character varying(10),
    is_tablet character varying(10),
    patient_id bigint NOT NULL,
    syrup_id bigint,
    tablet_id bigint,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    no_of_days integer,
    no_of_months integer,
    no_of_weeks integer,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_in_patient_prescription_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_in_patient_service
(
    u_app_in_patient_service_id bigint NOT NULL,
    patient_id bigint NOT NULL,
    service_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    no_of_times integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_in_patient_service_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_in_patient_symptom
(
    u_app_in_patient_symptom_id bigint NOT NULL,
    patient_id bigint NOT NULL,
    symptom_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_in_patient_symptom_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_inhalation
(
    u_app_inhalation_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    price numeric(9, 2) NOT NULL,
    quantity integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_inhalation_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_injection
(
    u_app_injection_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    price numeric(9, 2) NOT NULL,
    quantity integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_injection_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_service
(
    u_app_service_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    price numeric(9, 2) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_service_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_symptom
(
    u_app_symptom_id bigint NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_symptom_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_syrup
(
    u_app_syrup_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    price numeric(9, 2) NOT NULL,
    quantity integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_syrup_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_tablet
(
    u_app_tablet_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    price numeric(9, 2) NOT NULL,
    quantity integer NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_tablet_id)
);

CREATE TABLE IF NOT EXISTS public.u_app_ward
(
    u_app_ward_id bigint NOT NULL,
    rec_st character varying(10) NOT NULL,
    create_dt timestamp without time zone NOT NULL,
    created_by character varying(64) NOT NULL,
    name character varying(256) NOT NULL,
    price numeric(9, 2) NOT NULL,
    update_dt timestamp without time zone NOT NULL,
    updated_by character varying(64) NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (u_app_ward_id)
);

CREATE TABLE IF NOT EXISTS public.unclustercommand
(
    unclustercommand_id bigint NOT NULL,
    node_id character varying(40) NOT NULL,
    command_code character varying(64) NOT NULL,
    PRIMARY KEY (unclustercommand_id)
);

CREATE TABLE IF NOT EXISTS public.unclustercommandprm
(
    unclustercommandprm_id bigint NOT NULL,
    cluster_command_id bigint NOT NULL,
    parameter character varying(64) NOT NULL,
    PRIMARY KEY (unclustercommandprm_id)
);

CREATE TABLE IF NOT EXISTS public.unclusterdateseq
(
    unclusterdateseq_id bigint NOT NULL,
    sequence_counter bigint NOT NULL,
    sequence_dt timestamp without time zone NOT NULL,
    sequence_nm character varying(256) NOT NULL,
    PRIMARY KEY (unclusterdateseq_id)
);

CREATE TABLE IF NOT EXISTS public.unclusterlock
(
    unclusterlock_id character varying(128) NOT NULL,
    current_owner character varying(128),
    expiry_time timestamp without time zone NOT NULL,
    lock_count integer NOT NULL,
    PRIMARY KEY (unclusterlock_id)
);

CREATE TABLE IF NOT EXISTS public.unclusternode
(
    unclusternode_id character varying(40) NOT NULL,
    command_port integer,
    ip_address character varying(64) NOT NULL,
    last_heart_beat timestamp without time zone NOT NULL,
    PRIMARY KEY (unclusternode_id)
);

CREATE TABLE IF NOT EXISTS public.unclusterseq
(
    unclusterseq_id bigint NOT NULL,
    sequence_counter bigint NOT NULL,
    sequence_nm character varying(256) NOT NULL,
    PRIMARY KEY (unclusterseq_id)
);

CREATE TABLE IF NOT EXISTS public.unclusterseqblock
(
    sequence_nm character varying(256) NOT NULL,
    block_size integer NOT NULL,
    next_block bigint NOT NULL,
    version_no bigint NOT NULL,
    PRIMARY KEY (sequence_nm)
);

CREATE TABLE IF NOT EXISTS public.unclusteruniquestring
(
    unclusteruniquestring_id bigint NOT NULL,
    unique_string character varying(64) NOT NULL,
    PRIMARY KEY (unclusteruniquestring_id)
);

CREATE TABLE IF NOT EXISTS public.unfeature
(
    feature_cd character varying(40) NOT NULL,
    feature_value character varying(64) NOT NULL,
    PRIMARY KEY (feature_cd)
);

CREATE TABLE IF NOT EXISTS public.unparamdef
(
    unparamdef_id bigint NOT NULL,
    parameters_def_id bigint NOT NULL,
    description character varying(96) NOT NULL,
    editor character varying(128) NOT NULL,
    mandatory character(1) NOT NULL,
    name character varying(64) NOT NULL,
    type character varying(128) NOT NULL,
    PRIMARY KEY (unparamdef_id)
);

CREATE TABLE IF NOT EXISTS public.unparametersdef
(
    unparametersdef_id bigint NOT NULL,
    parametersdef_nm character varying(64) NOT NULL,
    PRIMARY KEY (unparametersdef_id)
);

CREATE TABLE IF NOT EXISTS public.unparamvalue
(
    unparamvalue_id bigint NOT NULL,
    parameter_values_id bigint NOT NULL,
    param_key character varying(64) NOT NULL,
    param_value character varying(128),
    PRIMARY KEY (unparamvalue_id)
);

CREATE TABLE IF NOT EXISTS public.unparamvalues
(
    unparamvalues_id bigint NOT NULL,
    parameters_def_id bigint NOT NULL,
    inst_id bigint NOT NULL,
    inst_type_name character varying(64) NOT NULL,
    PRIMARY KEY (unparamvalues_id)
);

CREATE TABLE IF NOT EXISTS public.unsingleversionblob
(
    unsingleversionblob_id bigint NOT NULL,
    application_nm character varying(128) NOT NULL,
    category_nm character varying(128) NOT NULL,
    large_object bytea NOT NULL,
    object_nm character varying(128) NOT NULL,
    version bigint NOT NULL,
    PRIMARY KEY (unsingleversionblob_id)
);

CREATE TABLE IF NOT EXISTS public.unsingleversionclob
(
    unsingleversionclob_id bigint NOT NULL,
    application_nm character varying(128) NOT NULL,
    category_nm character varying(128) NOT NULL,
    large_object text NOT NULL,
    object_nm character varying(128) NOT NULL,
    version bigint NOT NULL,
    PRIMARY KEY (unsingleversionclob_id)
);

CREATE TABLE IF NOT EXISTS public.unusersession
(
    unusersession_id character varying(64) NOT NULL,
    create_time timestamp without time zone NOT NULL,
    last_access_time timestamp without time zone NOT NULL,
    node character varying(32) NOT NULL,
    remote_address character varying(64),
    remote_host character varying(64),
    remote_user character varying(64),
    user_login_id character varying(64),
    user_name character varying(64),
    PRIMARY KEY (unusersession_id)
);

ALTER TABLE public.fc_applet
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_applet
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_applet
    ADD FOREIGN KEY (applet_ty)
    REFERENCES public.fc_applettype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_appletfilter
    ADD FOREIGN KEY (app_applet_id)
    REFERENCES public.fc_applet (fc_applet_id)
    NOT VALID;


ALTER TABLE public.fc_appletfilter
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_appletfilter
    ADD FOREIGN KEY (ownership_type)
    REFERENCES public.fc_ownershiptype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_appletprop
    ADD FOREIGN KEY (app_applet_id)
    REFERENCES public.fc_applet (fc_applet_id)
    NOT VALID;


ALTER TABLE public.fc_appletprop
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_application
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_application
    ADD FOREIGN KEY (module_id)
    REFERENCES public.fc_module (fc_module_id)
    NOT VALID;


ALTER TABLE public.fc_assignpage
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_assignpage
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_branch
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_branch
    ADD FOREIGN KEY (zone_id)
    REFERENCES public.fc_zone (fc_zone_id)
    NOT VALID;


ALTER TABLE public.fc_channelprop
    ADD FOREIGN KEY (notification_channel_id)
    REFERENCES public.fc_notifchannel (fc_notifchannel_id)
    NOT VALID;


ALTER TABLE public.fc_chart
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_chart
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_chart
    ADD FOREIGN KEY (palette_ty)
    REFERENCES public.fc_chartpalettetype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_chart
    ADD FOREIGN KEY (chart_ty)
    REFERENCES public.fc_charttype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_chartsnapshot
    ADD FOREIGN KEY (category_data_type)
    REFERENCES public.fc_chartcatdatatype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_chartsnapshotseries
    ADD FOREIGN KEY (chart_snapshot_id)
    REFERENCES public.fc_chartsnapshot (fc_chartsnapshot_id)
    NOT VALID;


ALTER TABLE public.fc_chartsnapshotseries
    ADD FOREIGN KEY (series_data_type)
    REFERENCES public.fc_chartserdatatype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_credential
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_dashboard
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_dashboard
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_dashboardtile
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_dashboardtile
    ADD FOREIGN KEY (dashboard_id)
    REFERENCES public.fc_dashboard (fc_dashboard_id)
    NOT VALID;


ALTER TABLE public.fc_dashboardtile
    ADD FOREIGN KEY (dashboardtile_ty)
    REFERENCES public.fc_dashboardtiletype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_department
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_endpointconfig
    ADD FOREIGN KEY (endpoint_type)
    REFERENCES public.rfendpointtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_endpointconfig
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entity
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_entity
    ADD FOREIGN KEY (entity_base_ty)
    REFERENCES public.fc_entitybasetype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entity
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityattachment
    ADD FOREIGN KEY (app_entity_id)
    REFERENCES public.fc_entity (fc_entity_id)
    NOT VALID;


ALTER TABLE public.fc_entityattachment
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityattachment
    ADD FOREIGN KEY (type)
    REFERENCES public.rffileattachmenttype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityexpression
    ADD FOREIGN KEY (app_entity_id)
    REFERENCES public.fc_entity (fc_entity_id)
    NOT VALID;


ALTER TABLE public.fc_entityexpression
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityfield
    ADD FOREIGN KEY (app_entity_id)
    REFERENCES public.fc_entity (fc_entity_id)
    NOT VALID;


ALTER TABLE public.fc_entityfield
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityfield
    ADD FOREIGN KEY (data_type)
    REFERENCES public.fc_entityfielddatatype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityfield
    ADD FOREIGN KEY (field_type)
    REFERENCES public.fc_entityfieldtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityindex
    ADD FOREIGN KEY (app_entity_id)
    REFERENCES public.fc_entity (fc_entity_id)
    NOT VALID;


ALTER TABLE public.fc_entityindex
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityuniqueconst
    ADD FOREIGN KEY (app_entity_id)
    REFERENCES public.fc_entity (fc_entity_id)
    NOT VALID;


ALTER TABLE public.fc_entityuniqueconst
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityupload
    ADD FOREIGN KEY (app_entity_id)
    REFERENCES public.fc_entity (fc_entity_id)
    NOT VALID;


ALTER TABLE public.fc_entityupload
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_entityupload
    ADD FOREIGN KEY (constraint_action)
    REFERENCES public.rfconstraintaction (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_fileattachment
    ADD FOREIGN KEY (attachment_ty)
    REFERENCES public.rffileattachmenttype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_fileattachmentdoc
    ADD FOREIGN KEY (file_attachment_id)
    REFERENCES public.fc_fileattachment (fc_fileattachment_id)
    NOT VALID;


ALTER TABLE public.fc_form
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_form
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formaction
    ADD FOREIGN KEY (app_form_id)
    REFERENCES public.fc_form (fc_form_id)
    NOT VALID;


ALTER TABLE public.fc_formaction
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formaction
    ADD FOREIGN KEY (formaction_ty)
    REFERENCES public.fc_uiactiontype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formannotation
    ADD FOREIGN KEY (app_form_id)
    REFERENCES public.fc_form (fc_form_id)
    NOT VALID;


ALTER TABLE public.fc_formannotation
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formannotation
    ADD FOREIGN KEY (formannotation_ty)
    REFERENCES public.fc_formannotationtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formelement
    ADD FOREIGN KEY (app_form_id)
    REFERENCES public.fc_form (fc_form_id)
    NOT VALID;


ALTER TABLE public.fc_formelement
    ADD FOREIGN KEY (color)
    REFERENCES public.fc_widgetcolor (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formelement
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formelement
    ADD FOREIGN KEY (tab_content_type)
    REFERENCES public.fc_tabcontenttype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formelement
    ADD FOREIGN KEY (element_ty)
    REFERENCES public.fc_formelementtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formfldvalidpolicy
    ADD FOREIGN KEY (app_form_id)
    REFERENCES public.fc_form (fc_form_id)
    NOT VALID;


ALTER TABLE public.fc_formfldvalidpolicy
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formrellist
    ADD FOREIGN KEY (app_form_id)
    REFERENCES public.fc_form (fc_form_id)
    NOT VALID;


ALTER TABLE public.fc_formrellist
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formsetstate
    ADD FOREIGN KEY (app_form_state_policy_id)
    REFERENCES public.fc_formstatepolicy (fc_formstatepolicy_id)
    NOT VALID;


ALTER TABLE public.fc_formsetstate
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formsetstate
    ADD FOREIGN KEY (element_ty)
    REFERENCES public.fc_formelementtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formstatepolicy
    ADD FOREIGN KEY (app_form_id)
    REFERENCES public.fc_form (fc_form_id)
    NOT VALID;


ALTER TABLE public.fc_formstatepolicy
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_formvalidpolicy
    ADD FOREIGN KEY (app_form_id)
    REFERENCES public.fc_form (fc_form_id)
    NOT VALID;


ALTER TABLE public.fc_formvalidpolicy
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_inboxmessage
    ADD FOREIGN KEY (notification_inbox_id)
    REFERENCES public.fc_notifinbox (fc_notifinbox_id)
    NOT VALID;


ALTER TABLE public.fc_module
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_moduleapp
    ADD FOREIGN KEY (module_id)
    REFERENCES public.fc_module (fc_module_id)
    NOT VALID;


ALTER TABLE public.fc_notifchannel
    ADD FOREIGN KEY (notification_type)
    REFERENCES public.fc_notificationtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notifchannel
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notifinbox
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_notifinboxstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notifoutbox
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_notifoutboxstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notifoutbox
    ADD FOREIGN KEY (notification_ty)
    REFERENCES public.fc_notificationtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notifoutboxmessage
    ADD FOREIGN KEY (format)
    REFERENCES public.fc_notifmessageformat (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notifoutboxmessage
    ADD FOREIGN KEY (notification_id)
    REFERENCES public.fc_notifoutbox (fc_notifoutbox_id)
    NOT VALID;


ALTER TABLE public.fc_notifrecipient
    ADD FOREIGN KEY (notification_id)
    REFERENCES public.fc_notifoutbox (fc_notifoutbox_id)
    NOT VALID;


ALTER TABLE public.fc_notifrecipient
    ADD FOREIGN KEY (type)
    REFERENCES public.fc_notifrecipienttype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notiftemplate
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_notiftemplate
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notiftemplate
    ADD FOREIGN KEY (message_format)
    REFERENCES public.fc_notifmessageformat (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_notiftemplate
    ADD FOREIGN KEY (notification_type)
    REFERENCES public.fc_notificationtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_passwordhist
    ADD FOREIGN KEY (user_id)
    REFERENCES public.fc_user (fc_user_id)
    NOT VALID;


ALTER TABLE public.fc_privilege
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_privilege
    ADD FOREIGN KEY (privilege_category_id)
    REFERENCES public.fc_privilegecat (fc_privilegecat_id)
    NOT VALID;


ALTER TABLE public.fc_proplist
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_proplist
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_proplistitem
    ADD FOREIGN KEY (app_property_set_id)
    REFERENCES public.fc_propset (fc_propset_id)
    NOT VALID;


ALTER TABLE public.fc_proprule
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_proprule
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_proprulechoice
    ADD FOREIGN KEY (app_property_rule_id)
    REFERENCES public.fc_proprule (fc_proprule_id)
    NOT VALID;


ALTER TABLE public.fc_proprulechoice
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_propset
    ADD FOREIGN KEY (app_property_list_id)
    REFERENCES public.fc_proplist (fc_proplist_id)
    NOT VALID;


ALTER TABLE public.fc_readconfig
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_readconfigproc
    ADD FOREIGN KEY (read_config_id)
    REFERENCES public.fc_readconfig (fc_readconfig_id)
    NOT VALID;


ALTER TABLE public.fc_readevent
    ADD FOREIGN KEY (read_config_proc_id)
    REFERENCES public.fc_readconfigproc (fc_readconfigproc_id)
    NOT VALID;


ALTER TABLE public.fc_readevent
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.rfendpointreadeventstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_readeventmsg
    ADD FOREIGN KEY (read_event_id)
    REFERENCES public.fc_readevent (fc_readevent_id)
    NOT VALID;


ALTER TABLE public.fc_ref
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_ref
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_reportabledef
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_reportabledef
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_reportablefld
    ADD FOREIGN KEY (reportable_id)
    REFERENCES public.fc_reportabledef (fc_reportabledef_id)
    NOT VALID;


ALTER TABLE public.fc_reportcolumn
    ADD FOREIGN KEY (column_order)
    REFERENCES public.rfordertype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_reportcolumn
    ADD FOREIGN KEY (horiz_align_type)
    REFERENCES public.rfhaligntype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_reportcolumn
    ADD FOREIGN KEY (report_configuration_id)
    REFERENCES public.fc_reportconfig (fc_reportconfig_id)
    NOT VALID;


ALTER TABLE public.fc_reportconfig
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_reportconfig
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_reportparam
    ADD FOREIGN KEY (report_configuration_id)
    REFERENCES public.fc_reportconfig (fc_reportconfig_id)
    NOT VALID;


ALTER TABLE public.fc_reportparam
    ADD FOREIGN KEY (type)
    REFERENCES public.rfdatatype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_role
    ADD FOREIGN KEY (department_id)
    REFERENCES public.fc_department (fc_department_id)
    NOT VALID;


ALTER TABLE public.fc_role
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_roleprivilege
    ADD FOREIGN KEY (privilege_id)
    REFERENCES public.fc_privilege (fc_privilege_id)
    NOT VALID;


ALTER TABLE public.fc_roleprivilege
    ADD FOREIGN KEY (role_id)
    REFERENCES public.fc_role (fc_role_id)
    NOT VALID;


ALTER TABLE public.fc_scheduledtask
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_scheduledtaskhist
    ADD FOREIGN KEY (scheduled_task_id)
    REFERENCES public.fc_scheduledtask (fc_scheduledtask_id)
    NOT VALID;


ALTER TABLE public.fc_scheduledtaskhist
    ADD FOREIGN KEY (task_status)
    REFERENCES public.rftaskstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_sysparameter
    ADD FOREIGN KEY (module_id)
    REFERENCES public.fc_module (fc_module_id)
    NOT VALID;


ALTER TABLE public.fc_sysparameter
    ADD FOREIGN KEY (param_ty)
    REFERENCES public.fc_sysparamtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_table
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_table
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_tableaction
    ADD FOREIGN KEY (app_table_id)
    REFERENCES public.fc_table (fc_table_id)
    NOT VALID;


ALTER TABLE public.fc_tableaction
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_tablecolumn
    ADD FOREIGN KEY (app_table_id)
    REFERENCES public.fc_table (fc_table_id)
    NOT VALID;


ALTER TABLE public.fc_tablecolumn
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_user
    ADD FOREIGN KEY (branch_id)
    REFERENCES public.fc_branch (fc_branch_id)
    NOT VALID;


ALTER TABLE public.fc_user
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_user
    ADD FOREIGN KEY (work_type)
    REFERENCES public.fc_workrecordtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_usergroup
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_usergroupmember
    ADD FOREIGN KEY (user_group_id)
    REFERENCES public.fc_usergroup (fc_usergroup_id)
    NOT VALID;


ALTER TABLE public.fc_usergroupmember
    ADD FOREIGN KEY (user_id)
    REFERENCES public.fc_user (fc_user_id)
    NOT VALID;


ALTER TABLE public.fc_usergrouprole
    ADD FOREIGN KEY (role_id)
    REFERENCES public.fc_role (fc_role_id)
    NOT VALID;


ALTER TABLE public.fc_usergrouprole
    ADD FOREIGN KEY (user_group_id)
    REFERENCES public.fc_usergroup (fc_usergroup_id)
    NOT VALID;


ALTER TABLE public.fc_userrole
    ADD FOREIGN KEY (role_id)
    REFERENCES public.fc_role (fc_role_id)
    NOT VALID;


ALTER TABLE public.fc_userrole
    ADD FOREIGN KEY (user_id)
    REFERENCES public.fc_user (fc_user_id)
    NOT VALID;


ALTER TABLE public.fc_widgettype
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_widgettype
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_widgettype
    ADD FOREIGN KEY (data_type)
    REFERENCES public.rfdatatype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_widgettype
    ADD FOREIGN KEY (input_type)
    REFERENCES public.fc_inputtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workchannel
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_workchannel
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workchannel
    ADD FOREIGN KEY (direction)
    REFERENCES public.fc_channeldirectiontype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workchannel
    ADD FOREIGN KEY (status)
    REFERENCES public.fc_wfchannelstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workflow
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_workflow
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workflowfilter
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workflowfilter
    ADD FOREIGN KEY (workflow_id)
    REFERENCES public.fc_workflow (fc_workflow_id)
    NOT VALID;


ALTER TABLE public.fc_workitem
    ADD FOREIGN KEY (wf_item_event_id)
    REFERENCES public.fc_workitemevent (fc_workitemevent_id)
    NOT VALID;


ALTER TABLE public.fc_workitemevent
    ADD FOREIGN KEY (priority)
    REFERENCES public.fc_wfsteppriority (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workitemevent
    ADD FOREIGN KEY (wf_item_hist_id)
    REFERENCES public.fc_workitemhistory (fc_workitemhistory_id)
    NOT VALID;


ALTER TABLE public.fc_workstep
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workstep
    ADD FOREIGN KEY (priority)
    REFERENCES public.fc_wfsteppriority (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workstep
    ADD FOREIGN KEY (record_action_type)
    REFERENCES public.fc_recordactiontype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workstep
    ADD FOREIGN KEY (step_type)
    REFERENCES public.fc_wfsteptype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workstep
    ADD FOREIGN KEY (workflow_id)
    REFERENCES public.fc_workflow (fc_workflow_id)
    NOT VALID;


ALTER TABLE public.fc_workstepalert
    ADD FOREIGN KEY (notification_type)
    REFERENCES public.fc_notificationtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workstepalert
    ADD FOREIGN KEY (alert_ty)
    REFERENCES public.fc_wfalerttype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workstepalert
    ADD FOREIGN KEY (wf_step_id)
    REFERENCES public.fc_workstep (fc_workstep_id)
    NOT VALID;


ALTER TABLE public.fc_worksteprole
    ADD FOREIGN KEY (role_id)
    REFERENCES public.fc_role (fc_role_id)
    NOT VALID;


ALTER TABLE public.fc_worksteprole
    ADD FOREIGN KEY (wf_step_id)
    REFERENCES public.fc_workstep (fc_workstep_id)
    NOT VALID;


ALTER TABLE public.fc_worksteprouting
    ADD FOREIGN KEY (wf_step_id)
    REFERENCES public.fc_workstep (fc_workstep_id)
    NOT VALID;


ALTER TABLE public.fc_workstepsetvalues
    ADD FOREIGN KEY (wf_step_id)
    REFERENCES public.fc_workstep (fc_workstep_id)
    NOT VALID;


ALTER TABLE public.fc_workstepuseraction
    ADD FOREIGN KEY (comment_requirement)
    REFERENCES public.rfrequirementtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workstepuseraction
    ADD FOREIGN KEY (wf_step_id)
    REFERENCES public.fc_workstep (fc_workstep_id)
    NOT VALID;


ALTER TABLE public.fc_workwizard
    ADD FOREIGN KEY (application_id)
    REFERENCES public.fc_application (fc_application_id)
    NOT VALID;


ALTER TABLE public.fc_workwizard
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workwizardstep
    ADD FOREIGN KEY (config_type)
    REFERENCES public.fc_configtype (ref_cd)
    NOT VALID;


ALTER TABLE public.fc_workwizardstep
    ADD FOREIGN KEY (wf_wizard_id)
    REFERENCES public.fc_workwizard (fc_workwizard_id)
    NOT VALID;


ALTER TABLE public.fc_zone
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_capsule
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_in_patient
    ADD FOREIGN KEY (gender)
    REFERENCES public.rfgender (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_bed_space
    ADD FOREIGN KEY (patient_id)
    REFERENCES public.u_app_in_patient (u_app_in_patient_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_bed_space
    ADD FOREIGN KEY (ward_id)
    REFERENCES public.u_app_ward (u_app_ward_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_diagnosis
    ADD FOREIGN KEY (diagnosis_id)
    REFERENCES public.u_app_diagnosis (u_app_diagnosis_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_diagnosis
    ADD FOREIGN KEY (patient_id)
    REFERENCES public.u_app_in_patient (u_app_in_patient_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (capsule_id)
    REFERENCES public.u_app_capsule (u_app_capsule_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (dose_id)
    REFERENCES public.u_app_dose (u_app_dose_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (duration_id)
    REFERENCES public.u_app_duration (u_app_duration_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (inhalation_id)
    REFERENCES public.u_app_inhalation (u_app_inhalation_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (injection_id)
    REFERENCES public.u_app_injection (u_app_injection_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (is_capsule)
    REFERENCES public.rfbooleantype (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (is_inhalation)
    REFERENCES public.rfbooleantype (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (is_injection)
    REFERENCES public.rfbooleantype (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (is_syrup)
    REFERENCES public.rfbooleantype (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (is_tablet)
    REFERENCES public.rfbooleantype (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (patient_id)
    REFERENCES public.u_app_in_patient (u_app_in_patient_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (syrup_id)
    REFERENCES public.u_app_syrup (u_app_syrup_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_prescription
    ADD FOREIGN KEY (tablet_id)
    REFERENCES public.u_app_tablet (u_app_tablet_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_service
    ADD FOREIGN KEY (patient_id)
    REFERENCES public.u_app_in_patient (u_app_in_patient_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_service
    ADD FOREIGN KEY (service_id)
    REFERENCES public.u_app_service (u_app_service_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_symptom
    ADD FOREIGN KEY (patient_id)
    REFERENCES public.u_app_in_patient (u_app_in_patient_id)
    NOT VALID;


ALTER TABLE public.u_app_in_patient_symptom
    ADD FOREIGN KEY (symptom_id)
    REFERENCES public.u_app_symptom (u_app_symptom_id)
    NOT VALID;


ALTER TABLE public.u_app_inhalation
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_injection
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_service
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_syrup
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_tablet
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.u_app_ward
    ADD FOREIGN KEY (rec_st)
    REFERENCES public.fc_recordstatus (ref_cd)
    NOT VALID;


ALTER TABLE public.unclustercommand
    ADD FOREIGN KEY (node_id)
    REFERENCES public.unclusternode (unclusternode_id)
    NOT VALID;


ALTER TABLE public.unclustercommandprm
    ADD FOREIGN KEY (cluster_command_id)
    REFERENCES public.unclustercommand (unclustercommand_id)
    NOT VALID;


ALTER TABLE public.unparamdef
    ADD FOREIGN KEY (parameters_def_id)
    REFERENCES public.unparametersdef (unparametersdef_id)
    NOT VALID;


ALTER TABLE public.unparamvalue
    ADD FOREIGN KEY (parameter_values_id)
    REFERENCES public.unparamvalues (unparamvalues_id)
    NOT VALID;


ALTER TABLE public.unparamvalues
    ADD FOREIGN KEY (parameters_def_id)
    REFERENCES public.unparametersdef (unparametersdef_id)
    NOT VALID;

END;
